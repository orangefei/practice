开发语言与框架：

    编程语言：Python2.7 + HTML + JScripts
    前端Web框架：Bootstrap
    后端Web框架：Django
    后端Task框架：Celery + Redis


sed -i "s/SELINUX=enforcing/SELINUX=disabled/g" /etc/sysconfig/selinux
镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。

ps:
运行在虚拟机或者物理机上的都可以。
我们初次理解容器时，习惯把容器和虚拟机类比，称之为“轻量级的虚拟机”。但是，随着深入，我们发现容器和虚拟机严格来讲并不是一个层次的东西，它就是软件+环境的打包集合。
那么无论是虚拟机还是物理机，都是硬件/基础设施的一种交付方式，本质上是一个层次的；而容器主要要解决以软件为中心的系列问题（开发、测试、部署、发布、运行）。
现在云计算非常火热，很多传统行业和互联网创业公司都运行在云上。从行业趋势上来看，原先的IDC逐步迁移到云上。在虚拟机中运行容器已经成为一种实践中的惯例，AWS的container服务就只运行在虚拟机中的。Docker顺应这个趋势，针对虚拟机做了一些工具，例如前文说的docker-machine。至于docker-swarm，以我对它的理解，应该不受限于虚拟机还是物理机吧？搞过Kubernetes，docker-swarm没实际用过。







Apache Mesos 、 Google Kubernetes 以及 Docker 原生 Swarm 之后，又一个可用于Production环境中的容器管理和服务编排工具，而Rancher恰似这个领域的最后一张拼图。

安装docker
vi /etc/selinux/config 
systemctl stop firewalld.service
systemctl disable firewalld.service 


yum -y install gcc*
yum install net-tools
yum install vim
yum install wget




yum install docker 
启动服务
systemctl start docker.service
systemctl enable docker.service

停止服务


rancher server:
    10.10.126.101

rancher agents:
    10.10.126.101
    10.10.105.71
    10.10.105.72
一、搭建单节点Rancher Server
Rancher的各种容器管理理念均架构在由Rancher server和rancher agent构建的Infrastructure之上。Rancher server是Rancher的核心，其地位就类似于k8s、Docker swarm或mesos中的master，提供核心容器管理服务以及API服务。作为正式版发布的Rancher v1.0.0支持HA(high available)的多节点rancher server集群，不过Install起来也的确复杂些，依赖的第三方组件也较多，什么MySQL、Redis、ZooKeeper等统统都要额外部署。由于是入门，这里就偷个赖儿，我们就搭建一个单节点的Rancher Server。

Rancher的一个设计理念是所有组件都Containerized（容器化），更有甚者Rancher Labs的另外一个产品RancherOS(地位类似于CoreOS，一款专门为运行容器而设计的Linux发行版)中所有系统服务都是 Dockerized的，这里的Rancher Server也不例外，极大的方便了我们的Install

首先，我们将rancher/server image pull到local，这个image size很大，需要耐心等待一段时间，即便是使用国内容器云厂商提供的加速器：
docker pull rancher/server 
docker images


接下来，启动rancher server：
docker run -d --restart=always -p 8080:8080 rancher/server
docker ps #查看进程

映射的8080端口既服务于Rancher UI，也是Rancher API的服务端口。用浏览器打开http://10.10.126.101:8080，如果你看到如下页面，则说明你的Rancher Server搭建成功了：

docker exec 116c7a42dc80  ps aux
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                              NAMES
116c7a42dc80        rancher/server      "/usr/bin/entry /usr/"   About an hour ago   Up About an hour    3306/tcp, 0.0.0.0:8080->8080/tcp   high_mirzakhani

添加key(用于api调用URL)




容器与容器之间的网络问题
外部连接容器的网络问题





